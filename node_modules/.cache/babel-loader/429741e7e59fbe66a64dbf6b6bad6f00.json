{"ast":null,"code":"import _classCallCheck from \"/Users/melissamasia/Documents/School_Work/Cloud_Computing/Spotify_Match/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissamasia/Documents/School_Work/Cloud_Computing/Spotify_Match/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissamasia/Documents/School_Work/Cloud_Computing/Spotify_Match/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissamasia/Documents/School_Work/Cloud_Computing/Spotify_Match/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissamasia/Documents/School_Work/Cloud_Computing/Spotify_Match/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissamasia/Documents/School_Work/Cloud_Computing/Spotify_Match/src/LoginPage/LoginPane.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\nimport logo from './logo.png';\nimport check from './check.png';\nimport { Button } from 'react-bootstrap';\nimport { authenticateUser } from '../api/apiCalls';\n\nvar LoginPane =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPane, _Component);\n\n  function LoginPane(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPane);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginPane).call(this, props));\n    _this.setState = {\n      username: '',\n      isLoading: false,\n      loggedIn: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginPane, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      }); //insert ajax call\n\n      username = authenticateUser();\n      this.setState({\n        loggedIn: true,\n        username: username\n      });\n      setTimeout(function () {\n        _this2.setState({\n          isLoading: false\n        });\n      }, 2000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loggedIn) {\n        return React.createElement(\"div\", {\n          className: \"pane\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"check-icon\",\n          src: check,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \" \", this.props.user, \" is signed in.\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"pane\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: logo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: !this.state.isLoading ? this.handleClick : null,\n          className: \"login-button\",\n          bsStyle: \"success\",\n          bsSize: \"large\",\n          disabled: this.stateisLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, this.state.isLoading ? 'Loading...' : 'Login to Spotify'));\n      }\n    }\n  }]);\n\n  return LoginPane;\n}(Component);\n\nexport default LoginPane;","map":{"version":3,"sources":["/Users/melissamasia/Documents/School_Work/Cloud_Computing/Spotify_Match/src/LoginPage/LoginPane.js"],"names":["React","Component","logo","check","Button","authenticateUser","LoginPane","props","setState","username","isLoading","loggedIn","setTimeout","state","user","handleClick","stateisLoading"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgB;AACZC,MAAAA,QAAQ,EAAE,EADE;AAEZC,MAAAA,SAAS,EAAE,KAFC;AAGZC,MAAAA,QAAQ,EAAE;AAHE,KAAhB;AAFc;AAOjB;;;;kCAEY;AAAA;;AACT,WAAKH,QAAL,CAAc;AAAEE,QAAAA,SAAS,EAAE;AAAb,OAAd,EADS,CAET;;AACAD,MAAAA,QAAQ,GAAGJ,gBAAgB,EAA3B;AACA,WAAKG,QAAL,CAAc;AACVG,QAAAA,QAAQ,EAAE,IADA;AAEVF,QAAAA,QAAQ,EAARA;AAFU,OAAd;AAIAG,MAAAA,UAAU,CAAC,YAAM;AACb,QAAA,MAAI,CAACJ,QAAL,CAAc;AAAEE,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH,OAFS,EAEP,IAFO,CAAV;AAIH;;;6BAEO;AACJ,UAAI,KAAKG,KAAL,CAAWF,QAAf,EAAwB;AACpB,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAA2B,UAAA,GAAG,EAAER,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAK,KAAKI,KAAL,CAAWO,IAAhB,mBAFJ,CADJ;AAMH,OAPD,MAOO;AACH,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAEZ,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,MAAD;AACI,UAAA,OAAO,EAAE,CAAC,KAAKW,KAAL,CAAWH,SAAZ,GAAwB,KAAKK,WAA7B,GAA2C,IADxD;AAEI,UAAA,SAAS,EAAC,cAFd;AAGI,UAAA,OAAO,EAAC,SAHZ;AAII,UAAA,MAAM,EAAC,OAJX;AAKI,UAAA,QAAQ,EAAE,KAAKC,cALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOK,KAAKH,KAAL,CAAWH,SAAX,GAAuB,YAAvB,GAAsC,kBAP3C,CAFJ,CADJ;AAcH;AACJ;;;;EAhDmBT,S;;AAmDxB,eAAeK,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Login.css';\nimport logo from './logo.png';\nimport check from './check.png';\nimport { Button } from 'react-bootstrap';\nimport { authenticateUser } from '../api/apiCalls';\n\nclass LoginPane extends Component {\n    constructor(props){\n        super(props);\n        this.setState = {\n            username: '',\n            isLoading: false,\n            loggedIn: false,\n        }\n    }\n    \n    handleClick(){\n        this.setState({ isLoading: true });\n        //insert ajax call\n        username = authenticateUser();\n        this.setState({ \n            loggedIn: true,\n            username,\n        });\n        setTimeout(() => {\n            this.setState({ isLoading: false})\n        }, 2000);\n        \n    }\n    \n    render(){\n        if (this.state.loggedIn){\n            return (\n                <div className=\"pane\">\n                    <img className=\"check-icon\"src={check}></img>\n                    <p> {this.props.user} is signed in.</p>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"pane\">\n                    <img src={logo}></img>\n                    <Button \n                        onClick={!this.state.isLoading ? this.handleClick : null } \n                        className=\"login-button\" \n                        bsStyle=\"success\" \n                        bsSize=\"large\"\n                        disabled={this.stateisLoading}\n                    >\n                        {this.state.isLoading ? 'Loading...' : 'Login to Spotify'}\n                    </Button>\n                </div>\n            );\n        }\n    }\n}\n\nexport default LoginPane;"]},"metadata":{},"sourceType":"module"}